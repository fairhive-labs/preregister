on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule: 
    - cron: "0 5 * * 1" # Every Monday at 5:00am UTC 

name: Test & Heroku Deployment
jobs:
  test:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      FAIRHIVE_API_SECURE_PATH1: "foo"
      FAIRHIVE_API_SECURE_PATH2: "bar"
      FAIRHIVE_ENCRYPTION_KEY: ${{ secrets.FAIRHIVE_ENCRYPTION_KEY }}
      FAIRHIVE_GSUITE_PASSWORD: ${{ secrets.FAIRHIVE_GSUITE_PASSWORD }}
      FAIRHIVE_GSUITE_USER: ${{ secrets.FAIRHIVE_GSUITE_USER }}
      MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
      MAILTRAP_USER: ${{ secrets.MAILTRAP_USER }}
    strategy:
      matrix:
        go-version: [1.20.x]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: setup
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - run: go test -v ./...
      - name: Get coverage report
        run: go test -coverprofile=coverage.out ./...
      - name: Convert coverage report (HTML)
        run: go tool cover -html=coverage.out -o coverage_go${{ matrix.go-version }}_${{ matrix.os }}.html
      - name: Archive code coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: ./coverage*.html
          retention-days: 30
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
  heroku:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Generate Secured Path
        run: |
          echo "FAIRHIVE_API_SECURE_PATH1=$(uuidgen)" >> $GITHUB_ENV
          echo "FAIRHIVE_API_SECURE_PATH2=$(uuidgen)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "polar-plains-98105"
          heroku_email: "jsie@fairhive-labs.com"
          healthcheck: "https://polar-plains-98105.herokuapp.com/health"
          checkstring: "ok"
          delay: 5
          rollbackonhealthcheckfailed: true
        env:
          HD_AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          HD_AWS_REGION: ${{ secrets.AWS_REGION }}
          HD_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HD_FAIRHIVE_API_SECURE_PATH1: ${{ env.FAIRHIVE_API_SECURE_PATH1 }}
          HD_FAIRHIVE_API_SECURE_PATH2: ${{ env.FAIRHIVE_API_SECURE_PATH2 }}
          HD_FAIRHIVE_ENCRYPTION_KEY: ${{ secrets.FAIRHIVE_ENCRYPTION_KEY }}
          HD_FAIRHIVE_GSUITE_PASSWORD: ${{ secrets.FAIRHIVE_GSUITE_PASSWORD }}
          HD_FAIRHIVE_GSUITE_USER: ${{ secrets.FAIRHIVE_GSUITE_USER }}
          HD_MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
          HD_MAILTRAP_USER: ${{ secrets.MAILTRAP_USER }}
          HD_GIN_MODE: release
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: _github
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Heroku Deployment - preregister/waitlist
          SLACK_MESSAGE: "<http://fairhive.io/admin/${{ env.FAIRHIVE_API_SECURE_PATH1 }}/${{ env.FAIRHIVE_API_SECURE_PATH2 }}/users|Users details>"
          SLACK_FOOTER: "<https://polar-plains-98105.herokuapp.com/${{ env.FAIRHIVE_API_SECURE_PATH1 }}/${{ env.FAIRHIVE_API_SECURE_PATH2 }}/list?mime=csv| Users list - CSV>"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
