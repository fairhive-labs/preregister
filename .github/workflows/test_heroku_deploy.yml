on:
  push:
    branches:
      - main

name: Test & Heroku Deployment
jobs:
  test:
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      FAIRHIVE_API_SECURE_PATH1: ${{ secrets.FAIRHIVE_API_SECURE_PATH1 }}
      FAIRHIVE_API_SECURE_PATH2: ${{ secrets.FAIRHIVE_API_SECURE_PATH2 }}
      FAIRHIVE_ENCRYPTION_KEY: ${{ secrets.FAIRHIVE_ENCRYPTION_KEY }}
      FAIRHIVE_GSUITE_PASSWORD: ${{ secrets.FAIRHIVE_GSUITE_PASSWORD }}
      FAIRHIVE_GSUITE_USER: ${{ secrets.FAIRHIVE_GSUITE_USER }}
      MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
      MAILTRAP_USER: ${{ secrets.MAILTRAP_USER }}
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: setup
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: checkout
        uses: actions/checkout@v3
      - name: caching
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
      - run: go test -v ./...
  heroku:
    runs-on: ubuntu-latest
    needs: test
    # if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    steps:
      - name: Generate uuid
        run: |
          echo "MY_UUID=$(uuidgen)" >> $GITHUB_ENV
      - name: Use uuid
        run: |
          echo "UUID = ${{ env.MY_UUID }}"
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "polar-plains-98105"
          heroku_email: "jsie@fairhive-labs.com"
          healthcheck: "https://polar-plains-98105.herokuapp.com/health"
          checkstring: "ok"
          delay: 5
          rollbackonhealthcheckfailed: true
        env:
          HD_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          HD_AWS_REGION: ${{ secrets.AWS_REGION }}
          HD_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          HD_FAIRHIVE_API_SECURE_PATH1: ${{ secrets.FAIRHIVE_API_SECURE_PATH1 }}
          HD_FAIRHIVE_API_SECURE_PATH2: ${{ secrets.FAIRHIVE_API_SECURE_PATH2 }}
          HD_FAIRHIVE_ENCRYPTION_KEY: ${{ secrets.FAIRHIVE_ENCRYPTION_KEY }}
          HD_FAIRHIVE_GSUITE_PASSWORD: ${{ secrets.FAIRHIVE_GSUITE_PASSWORD }}
          HD_FAIRHIVE_GSUITE_USER: ${{ secrets.FAIRHIVE_GSUITE_USER }}
          HD_MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
          HD_MAILTRAP_USER: ${{ secrets.MAILTRAP_USER }}
          HD_UUID: ${{ env.MY_UUID }}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: _github
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: Heroku Deployment
          SLACK_MESSAGE: ${{ env.MY_UUID }}
          SLACK_USERNAME: _whyvrafvr
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
